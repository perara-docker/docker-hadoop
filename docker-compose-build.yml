version: '3'

services:
  base:
    build:
      context: ./base
      args:
        - JAVA_VERSION=${JAVA_VERSION:-11}
        - HADOOP_VERSION=${HADOOP_VERSION:-3.1.1}
    image: ghcr.io/perara-docker/hadoop/base:hadoop${HADOOP_VERSION:-3.1.1}-java${JAVA_VERSION:-11}



  namenode:
    build:
      context: ./namenode/
      args:
        - JAVA_VERSION=${JAVA_VERSION:-11}
        - HADOOP_VERSION=${HADOOP_VERSION:-3.1.1}
    image: ghcr.io/perara-docker/hadoop/namenode:${HADOOP_VERSION:-3.1.1}-java${JAVA_VERSION:-11}
    networks:
      - hbase
    volumes:
      - namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.hostname == akswnc4.aksw.uni-leipzig.de
      labels:
        traefik.docker.network: hbase
        traefik.port: 50070

  datanode:
    build:
      context: ./datanode/
      args:
        - JAVA_VERSION=${JAVA_VERSION:-11}
        - HADOOP_VERSION=${HADOOP_VERSION:-3.1.1}
    image: ghcr.io/perara-docker/hadoop/datanode:${HADOOP_VERSION:-3.1.1}-java${JAVA_VERSION:-11}
    networks:
      - hbase
    volumes:
      - datanode:/hadoop/dfs/data
    env_file:
      - ./hadoop.env
    environment:
      SERVICE_PRECONDITION: "namenode:50070"
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      labels:
        traefik.docker.network: hbase
        traefik.port: 50075

  resourcemanager:
    build:
      context: ./resourcemanager/
      args:
        - JAVA_VERSION=${JAVA_VERSION:-11}
        - HADOOP_VERSION=${HADOOP_VERSION:-3.1.1}
    image: ghcr.io/perara-docker/hadoop/resourcemanager:${HADOOP_VERSION:-3.1.1}-java${JAVA_VERSION:-11}
    networks:
      - hbase
    environment:
      SERVICE_PRECONDITION: "namenode:50070 datanode:50075"
    env_file:
      - ./hadoop.env
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.hostname == akswnc4.aksw.uni-leipzig.de
      labels:
        traefik.docker.network: hbase
        traefik.port: 8088
    healthcheck:
      disable: true

  nodemanager:
    build:
      context: ./nodemanager/
      args:
        - JAVA_VERSION=${JAVA_VERSION:-11}
        - HADOOP_VERSION=${HADOOP_VERSION:-3.1.1}
    image: ghcr.io/perara-docker/hadoop/nodemanager:${HADOOP_VERSION:-3.1.1}-java${JAVA_VERSION:-11}
    networks:
      - hbase
    environment:
      SERVICE_PRECONDITION: "namenode:50070 datanode:50075 resourcemanager:8088"
    env_file:
      - ./hadoop.env
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      labels:
        traefik.docker.network: hbase
        traefik.port: 8042

  historyserver:
    build:
      context: ./historyserver/
      args:
        - JAVA_VERSION=${JAVA_VERSION:-11}
        - HADOOP_VERSION=${HADOOP_VERSION:-3.1.1}
    image: ghcr.io/perara-docker/hadoop/historyserver:${HADOOP_VERSION:-3.1.1}-java${JAVA_VERSION:-11}
    networks:
      - hbase
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    environment:
      SERVICE_PRECONDITION: "namenode:50070 datanode:50075 resourcemanager:8088"
    env_file:
      - ./hadoop.env
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.hostname == akswnc4.aksw.uni-leipzig.de
      labels:
        traefik.docker.network: hbase
        traefik.port: 8188

volumes:
  datanode:
  namenode:
  hadoop_historyserver:

networks:
  hbase:
    external:
      name: ikt433

